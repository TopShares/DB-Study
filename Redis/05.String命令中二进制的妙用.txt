一：二进制运算

1. GetBit key offset          获取二进制中offset这个位置的“0，1”状态。

2. SetBit key offset value    设置二进制中offset这个位置的“0，1”状态。

3. Bitcount key               获取二进制中1的个数。

4. BitOp operation            二进制位的操作（^ & |)

二：Redis中二进制有两个坑。

1. 你所输入的数字全部用char类型表示， 2 => ascII形式展现【50】，
   所以2是字符的“2”。
    
   sample:  2    0 0 1 0    bitcount= 1  错。  bitcount=3。

2. 一般来说2这个字符的二进制位，采用的顺序是（从右到左。）
   但是在redis是从（从左到右）

   2=> '2' => 50  =>    0  0  1  1  0  0  1  0   32+16+2

3. setbit num1 7 1 =>   0  0  1  1  0  0  1  1   32+16+2+1 => 51 ('3')

4. BitOp                0  0  1  1  0  0  1  1  num1 = 3
                     &  0  0  1  1  0  0  1  0  num2 = 2
		     __________________________
		        0  0  1  1  0  0  1  0  num3= 2


二：妙用 

 1. '2' => 50 =>    0  0  1  1  0  0  1  0     //二进制位中，要么是1，要么是0

           日    六  五   四  三  二   一
 2.    0    0    0    0    1  0    0   1    char