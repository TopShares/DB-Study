
一：深入剖析String类型 

1.   Redis采用C语言编写。 

2.   C语言是怎么标识string的呢？？？	char[]


3. 如果说redis采用char[] 会有什么样的弊端

    StrLen： 是不是要遍历 char[] 数组 O(N)

    Append:  是不是也需要遍历char[],然后在char[]中追加。 O(N)

    Redis的目标就是高性能，高并发。

4. Redis的解决方案呢？？？ 自己封装了一下char[],封装类型SDS （简单对象类型） 


struct sdshdr {
    unsigned int len;    //记录char[]实际使用的长度<=buf[].length
    unsigned int free;   //free记录着buf[]中未使用的坑位。
    char buf[];
};

5. StrLen =>  return sh->len;  O(1)

6. 看看string类型如何包装sds。

typedef struct redisObject {
    unsigned type:4;
    unsigned encoding:4;
    unsigned lru:REDIS_LRU_BITS; /* lru time (relative to server.lruclock) */
    int refcount;	         //垃圾回收（GC）
    void *ptr;
} robj;


